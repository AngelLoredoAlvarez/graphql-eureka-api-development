CREATE OR REPLACE FUNCTION eureka_public.modify_client_contract(
    business TEXT,
    id_town INTEGER,
    id_township INTEGER,
    id_street INTEGER,
    exterior_number TEXT,
    id_type_contract INTEGER,
    contacts eureka_public.contact[],
    id INTEGER
) RETURNS eureka_public.client_contract AS $$
    DECLARE
        selected_client_contract eureka_public.client_contract;
        months_quantity INTEGER;
        modified_client_contract eureka_public.client_contract;
        business_contact eureka_public.contact;
    BEGIN
        SELECT * FROM eureka_public.client_contract WHERE eureka_public.client_contract.id = $8 INTO selected_client_contract;
        SELECT number_months FROM eureka_public.client_contract_type WHERE eureka_public.client_contract_type.id = $6 INTO months_quantity;

        IF $6 <> selected_client_contract.id_type_contract AND selected_client_contract.status = 'Por Pagar' THEN
            RAISE EXCEPTION USING 
                MESSAGE = 'El Tipo de Contrato no puede ser modificado, pues este contrato esta por realizar su pago correspondiente.',
                HINT = 'Pago Pendiente';
        ELSEIF $6 <> selected_client_contract.id_type_contract AND selected_client_contract.status = 'Adeudo' THEN
            RAISE EXCEPTION USING 
                MESSAGE = 'El Tipo de Contrato no puede ser modificado, pues este contrato tiene adeudos pendientes.',
                HINT = 'Adeudos Pendiente';
        ELSE
            UPDATE
                eureka_public.client_contract
            SET
                business = $1,
                id_town = $2,
                id_township = $3,
                id_street = $4,
                exterior_number = $5,
                id_type_contract = $6,
                end_date = start_date + (months_quantity || ' MONTHS')::INTERVAL
            WHERE
                eureka_public.client_contract.id = $8
            RETURNING * INTO modified_client_contract;

            DELETE FROM eureka_public.business_contact WHERE eureka_public.business_contact.id_contract = $8;

            IF ARRAY_LENGTH($7, 1) > 0 THEN
                FOREACH business_contact IN ARRAY $7 LOOP
                    INSERT INTO eureka_public.business_contact(
                        type_contact,
                        contact,
                        id_contract
                    ) VALUES(
                        business_contact.type_contact,
                        business_contact.contact,
                        modified_client_contract.id
                    );
                END LOOP;
            END IF;

            DELETE FROM eureka_public.client_contract_movement WHERE eureka_public.client_contract_movement.date BETWEEN selected_client_contract.start_date AND selected_client_contract.end_date AND eureka_public.client_contract_movement.id_contract = $8;

            FOR counter IN 1..months_quantity LOOP
                IF counter = 1 THEN
                    INSERT INTO eureka_public.client_contract_movement(
                        date,
                        movement,
                        id_contract
                    ) VALUES(
                        modified_client_contract.start_date,
                        'Pagado',
                        modified_client_contract.id
                    );
                ELSE
                    INSERT INTO eureka_public.client_contract_movement(
                        date,
                        movement,
                        id_contract
                    ) VALUES(
                        modified_client_contract.start_date + ('3 DAYS ' || counter - 1 || ' MONTHS')::INTERVAL,
                        'Por Pagar',
                        modified_client_contract.id
                    );
                END IF;
            END LOOP;
        END IF;

        RETURN modified_client_contract;
    END;
$$ LANGUAGE PLPGSQL VOLATILE;