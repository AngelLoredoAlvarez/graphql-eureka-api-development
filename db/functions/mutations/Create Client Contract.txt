CREATE OR REPLACE FUNCTION eureka_public.create_client_contract(
    business TEXT,
    id_town INTEGER,
    id_township INTEGER,
    id_street INTEGER,
    exterior_number TEXT,
    id_type_contract INTEGER,
    contacts eureka_public.contact[],
    id_client INTEGER
) RETURNS eureka_public.client_contract AS $$
    DECLARE
        months_quantity INTEGER;
        created_client_contract eureka_public.client_contract;
        business_contact eureka_public.contact;
        counter INTEGER := 0;
    BEGIN
        IF EXISTS(
            SELECT
                1
            FROM
                eureka_public.client_contract
            WHERE
                UNACCENT(eureka_public.client_contract.business)
            LIKE
                UNACCENT($1)
        ) THEN
            RAISE EXCEPTION USING 
                MESSAGE = 'El contrato para el Negocio ' || $1 || ' ya fue registrado.',
                HINT = 'Contrato ya Registrado';
        ELSE
            SELECT number_months FROM eureka_public.client_contract_type WHERE id = $6 INTO months_quantity;

            INSERT INTO eureka_public.client_contract(
                business,
                id_town,
                id_township,
                id_street,
                exterior_number,
                id_type_contract,
                end_date,
                status,
                id_client
            ) VALUES(
                $1,
                $2,
                $3,
                $4,
                $5,
                $6,
                NOW() + (months_quantity || ' MONTHS')::INTERVAL,
                'Activo',
                $8
            ) RETURNING * INTO created_client_contract;

            IF ARRAY_LENGTH($7, 1) > 0 THEN
                FOREACH business_contact IN ARRAY $7 LOOP
                    INSERT INTO eureka_public.business_contact(
                        type_contact,
                        contact,
                        id_contract
                    ) VALUES(
                        business_contact.type_contact,
                        business_contact.contact,
                        created_client_contract.id
                    );
                END LOOP;
            END IF;

            FOR counter IN 1..months_quantity LOOP
                IF counter = 1 THEN
                    INSERT INTO eureka_public.client_contract_movement(
                        date,
                        movement,
                        id_contract
                    ) VALUES(
                        created_client_contract.start_date,
                        'Pagado',
                        created_client_contract.id
                    );
                ELSE
                    INSERT INTO eureka_public.client_contract_movement(
                        date,
                        movement,
                        id_contract
                    ) VALUES(
                        created_client_contract.start_date + (counter - 1 || ' MONTHS')::INTERVAL,
                        'Por Pagar',
                        created_client_contract.id
                    );
                END IF;
            END LOOP;
        END IF;

        RETURN created_client_contract;
    END;
$$ LANGUAGE PLPGSQL VOLATILE;